openapi: 3.0.0
info:
  title: Books  Example
  version: 1.0.0
paths:
  /books:
    get:
      operationId: books.api.get_books
      summary: List of all books |
        Available filter by title, author, create date
      parameters:
      - name: author
        in: query
        schema:
          type: string
          pattern: '^[\w\s.,]*$'
      - name: title
        in: query
        schema:
          type: string
          pattern: '^[\w\s.,]*$'
      - name: date_start
        in: query
        schema:
          type: string
          pattern: '^[\d-]*$'
          example: '2019-03-14'
      - name: date_end
        in: query
        schema:
          type: string
          pattern: '^[\d-]*$'
          example: '2019-03-20'
      responses:
        '200':
          description: |-
            Return books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Books'
    post:
      operationId: books.api.add_books
      summary: Add new books
      responses:
        '201':
          description: New books created
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: books
              $ref: '#/components/schemas/Books'
  /books/{id}:
    put:
      operationId: books.api.edit_book
      summary: Update a book
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Book successful updated
        '404':
          description: Book does not exist
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: book
              $ref: '#/components/schemas/Book'

    delete:
      operationId: books.api.delete_book
      summary: Delete a book
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Book was deleted
        '404':
          description: Book does not exist

components:
  parameters:
    id:
      name: id
      description: Unique identifier
      in: path
      required: true
      schema:
        type: integer
  schemas:
    Book:
      type: object
      required:
      - title
      - author
      properties:
        id:
          type: integer
          description: Unique identifier
          readOnly: true
          example: 1
        title:
          type: string
          description: Books's title
          minLength: 1
          maxLength: 150
          example: Selected stories
        publish_year:
          type: integer
          description: Book's publish year
          example: 1922
        author:
          type: string
          description: Author
          minLength: 1
          maxLength: 150
          example: O. Henry
        pages_count:
          type: integer
          description: Count of pages in book
          example: 464
        create_dt:
          type: string
          format: date-time
          description: Creation time
          readOnly: true
          example: '2019-03-14T15:49:51.230+03:00'
    Books:
      type: array
      items:
        $ref: '#/components/schemas/Book'